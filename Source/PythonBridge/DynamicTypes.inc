
// define Python flags. See file pyDebug.h
Py_DebugFlag: PInt;
Py_VerboseFlag: PInt;
Py_InteractiveFlag: PInt;
Py_OptimizeFlag: PInt;
Py_NoSiteFlag: PInt;
Py_UseClassExceptionsFlag: PInt;
Py_FrozenFlag: PInt;
Py_TabcheckFlag: PInt;
Py_UnicodeFlag: PInt;
Py_IgnoreEnvironmentFlag: PInt;
Py_DivisionWarningFlag: PInt;
//_PySys_TraceFunc:    PPPyObject;
//_PySys_ProfileFunc: PPPPyObject;

PyImport_FrozenModules: PP_frozen;

Py_None:            PPyObject;
Py_Ellipsis:        PPyObject;
Py_False:           PPyIntObject;
Py_True:            PPyIntObject;
Py_NotImplemented:  PPyObject;

PyExc_AttributeError: PPPyObject;
PyExc_EOFError: PPPyObject;
PyExc_IOError: PPPyObject;
PyExc_ImportError: PPPyObject;
PyExc_IndexError: PPPyObject;
PyExc_KeyError: PPPyObject;
PyExc_KeyboardInterrupt: PPPyObject;
PyExc_MemoryError: PPPyObject;
PyExc_NameError: PPPyObject;
PyExc_OverflowError: PPPyObject;
PyExc_RuntimeError: PPPyObject;
PyExc_SyntaxError: PPPyObject;
PyExc_SystemError: PPPyObject;
PyExc_SystemExit: PPPyObject;
PyExc_TypeError: PPPyObject;
PyExc_ValueError: PPPyObject;
PyExc_ZeroDivisionError: PPPyObject;
PyExc_ArithmeticError: PPPyObject;
PyExc_Exception: PPPyObject;
PyExc_FloatingPointError: PPPyObject;
PyExc_LookupError: PPPyObject;
PyExc_StandardError: PPPyObject;
PyExc_AssertionError: PPPyObject;
PyExc_EnvironmentError: PPPyObject;
PyExc_IndentationError: PPPyObject;
PyExc_MemoryErrorInst: PPPyObject;
PyExc_NotImplementedError: PPPyObject;
PyExc_OSError: PPPyObject;
PyExc_TabError: PPPyObject;
PyExc_UnboundLocalError: PPPyObject;
PyExc_UnicodeError: PPPyObject;
{$IFDEF windows}
PyExc_WindowsError: PPPyObject;
{$ENDIF}
PyExc_Warning: PPPyObject;
PyExc_DeprecationWarning: PPPyObject;
PyExc_RuntimeWarning: PPPyObject;
PyExc_SyntaxWarning: PPPyObject;
PyExc_UserWarning: PPPyObject;
PyExc_ReferenceError: PPPyObject;
PyExc_StopIteration: PPPyObject;
PyExc_FutureWarning: PPPyObject;
PyExc_PendingDeprecationWarning: PPPyObject;
PyExc_UnicodeDecodeError: PPPyObject;
PyExc_UnicodeEncodeError: PPPyObject;
PyExc_UnicodeTranslateError: PPPyObject;

PyType_Type: PPyTypeObject;
PyCFunction_Type: PPyTypeObject;
PyCObject_Type: PPyTypeObject;
PyClass_Type: PPyTypeObject;
PyCode_Type: PPyTypeObject;
PyComplex_Type: PPyTypeObject;
PyDict_Type: PPyTypeObject;
PyFile_Type: PPyTypeObject;
PyFloat_Type: PPyTypeObject;
PyFrame_Type: PPyTypeObject;
PyFunction_Type: PPyTypeObject;
PyInstance_Type: PPyTypeObject;
PyInt_Type: PPyTypeObject;
PyList_Type: PPyTypeObject;
PyLong_Type: PPyTypeObject;
PyMethod_Type: PPyTypeObject;
PyModule_Type: PPyTypeObject;
PyObject_Type: PPyTypeObject;
PyRange_Type: PPyTypeObject;
PySlice_Type: PPyTypeObject;
//PyString_Type: PPyTypeObject;
PyTuple_Type: PPyTypeObject;
PyBaseObject_Type: PPyTypeObject;
PyBuffer_Type: PPyTypeObject;
PyCallIter_Type: PPyTypeObject;
PyCell_Type: PPyTypeObject;
PyClassMethod_Type: PPyTypeObject;
PyProperty_Type: PPyTypeObject;
PySeqIter_Type: PPyTypeObject;
PyStaticMethod_Type: PPyTypeObject;
PySuper_Type: PPyTypeObject;
PyTraceBack_Type: PPyTypeObject;
PyUnicode_Type: PPyTypeObject;
PyWrapperDescr_Type: PPyTypeObject;
_PyWeakref_RefType: PPyTypeObject;
_PyWeakref_ProxyType: PPyTypeObject;
_PyWeakref_CallableProxyType: PPyTypeObject;
PyBaseString_Type: PPyTypeObject;
PyBool_Type: PPyTypeObject;
PyEnum_Type: PPyTypeObject;

//PyArg_GetObject: function(args : PPyObject; nargs, i: integer; p_a: PPPyObject): integer; cdecl;
//PyArg_GetLong:   function(args : PPyObject; nargs, i: integer; p_a: PLong): integer; cdecl;
//PyArg_GetShort:  function(args : PPyObject; nargs, i: integer; p_a: PShort): integer; cdecl;
//PyArg_GetFloat:  function(args : PPyObject; nargs, i: integer; p_a: PFloat): integer; cdecl;
//PyArg_GetString: function(args : PPyObject; nargs, i: integer; p_a: PAnsiString): integer; cdecl;
//PyArgs_VaParse:  function (args : PPyObject; format: PAnsiChar; va_list: array of const): integer; cdecl;
// Does not work!
// Py_VaBuildValue: function (format: PAnsiChar; va_list: array of const): PPyObject; cdecl;
//PyBuiltin_Init:     procedure; cdecl;

PyComplex_FromCComplex: function(c: Py_complex):PPyObject; cdecl;
PyComplex_FromDoubles: function(realv,imag : double):PPyObject; cdecl;
PyComplex_RealAsDouble: function(op : PPyObject ): double; cdecl;
PyComplex_ImagAsDouble: function(op : PPyObject ): double; cdecl;
PyComplex_AsCComplex: function(op : PPyObject ): Py_complex; cdecl;
PyCFunction_GetFunction: function(ob : PPyObject): Pointer; cdecl;
PyCFunction_GetSelf: function(ob : PPyObject): PPyObject; cdecl;
PyCallable_Check: function(ob : PPyObject): integer; cdecl;
PyCObject_FromVoidPtr: function(cobj, destruct : Pointer): PPyObject; cdecl;
PyCObject_AsVoidPtr: function(ob : PPyObject): Pointer; cdecl;
PyClass_New: function (ob1,ob2,ob3 :  PPyObject): PPyObject; cdecl;
PyClass_IsSubclass: function (ob1, ob2 : PPyObject): integer cdecl;

Py_InitModule4: function( name: PAnsiChar; methods: PPyMethodDef; doc: PAnsiChar;
                          passthrough: PPyObject; Api_Version: Integer):PPyObject; cdecl;
PyModule_Create2:   function(moduledef: PPyModuleDef; Api_Version: Integer):PPyObject; cdecl;
PyErr_BadArgument:  function: integer; cdecl;
PyErr_BadInternalCall: procedure; cdecl;
PyErr_CheckSignals: function: integer; cdecl;
PyErr_Clear:        procedure; cdecl;
PyErr_Fetch:        procedure( errtype, errvalue, errtraceback: PPPyObject); cdecl;
PyErr_NoMemory:     function: PPyObject; cdecl;
PyErr_Occurred:     function: PPyObject; cdecl;
PyErr_Print:        procedure; cdecl;
PyErr_Restore:      procedure  (errtype, errvalue, errtraceback: PPyObject); cdecl;
PyErr_SetFromErrno: function (ob :  PPyObject):PPyObject; cdecl;
PyErr_SetNone:      procedure(value: PPyObject); cdecl;
PyErr_SetObject:    procedure  (ob1, ob2  : PPyObject); cdecl;
PyErr_SetString:    procedure( ErrorObject: PPyObject; text: PAnsiChar); cdecl;
PyImport_GetModuleDict: function: PPyObject; cdecl;
PyArg_Parse:        function( args: PPyObject; format: PAnsiChar {;....}) :  Integer; cdecl varargs;
PyArg_ParseTuple:   function( args: PPyObject; format: PAnsiChar {;...}): Integer; cdecl varargs;
Py_BuildValue:      function( format: PAnsiChar {;...}): PPyObject; cdecl varargs;
Py_Initialize:      procedure; cdecl;
Py_Exit:            procedure( RetVal: Integer); cdecl;
PyEval_GetBuiltins: function: PPyObject; cdecl;
PyDict_Copy:        function(mp: PPyObject):PPyObject; cdecl;
PyDict_GetItem:     function(mp, key : PPyObject):PPyObject; cdecl;
PyDict_SetItem:     function(mp, key, item :PPyObject ):integer; cdecl;
PyDict_DelItem:     function(mp, key : PPyObject ):integer; cdecl;
PyDict_Clear:       procedure(mp : PPyObject); cdecl;
PyDict_Next:        function(mp : PPyObject; pos: PNativeInt; key, value: PPPyObject):integer; cdecl;
PyDict_Keys:        function(mp: PPyObject):PPyObject; cdecl;
PyDict_Values:      function(mp: PPyObject):PPyObject; cdecl;
PyDict_Items:       function(mp: PPyObject):PPyObject; cdecl;
PyDict_Size:        function(mp: PPyObject):NativeInt; cdecl;
PyDict_DelItemString: function(dp : PPyObject;key : PAnsiChar ):integer; cdecl;
PyDict_New: function: PPyObject; cdecl;
PyDict_GetItemString: function( dp: PPyObject; key: PAnsiChar): PPyObject; cdecl;
PyDict_SetItemString: function( dp: PPyObject; key: PAnsiChar; item: PPyObject):
                      Integer; cdecl;
PyDictProxy_New:      function (obj : PPyObject) : PPyObject; cdecl;
PyModule_GetDict:     function( module:PPyObject): PPyObject; cdecl;
PyObject_Str:         function( v: PPyObject): PPyObject; cdecl;
PyRun_String:         function( str: PAnsiChar; start: Integer; globals: PPyObject;
                                locals: PPyObject): PPyObject; cdecl;
PyRun_SimpleString:   function( str: PAnsiChar): Integer; cdecl;
PyBytes_AsString:    function( ob: PPyObject): PAnsiChar; cdecl;
PyBytes_AsStringAndSize: function( ob: PPyObject; var buffer: PAnsiChar; var size: NativeInt): integer; cdecl;
PySys_SetArgv:        procedure( argc: Integer; argv: PPAnsiChar); cdecl;

PyCFunction_New: function(md:PPyMethodDef;ob:PPyObject):PPyObject; cdecl;
PyCFunction_NewEx: function(md:PPyMethodDef;self, ob:PPyObject):PPyObject; cdecl;
// Removed.  Use PyEval_CallObjectWithKeywords with third argument nil
//    PyEval_CallObject: function(callable_obj, args:PPyObject):PPyObject; cdecl;
PyEval_CallObjectWithKeywords:function (callable_obj, args, kw:PPyObject):PPyObject; cdecl;
PyEval_GetFrame:function :PPyObject; cdecl;
PyEval_GetGlobals:function :PPyObject; cdecl;
PyEval_GetLocals:function :PPyObject; cdecl;
//PyEval_GetOwner:function :PPyObject; cdecl;
PyEval_GetRestricted:function :integer; cdecl;

PyEval_InitThreads:procedure; cdecl;
PyEval_RestoreThread:procedure( tstate: PPyThreadState); cdecl;
PyEval_SaveThread:function :PPyThreadState; cdecl;

PyFile_FromString:function (pc1,pc2:PAnsiChar):PPyObject; cdecl;
PyFile_GetLine:function (ob:PPyObject;i:integer):PPyObject; cdecl;
PyFile_Name:function (ob:PPyObject):PPyObject; cdecl;
PyFile_SetBufSize:procedure(ob:PPyObject;i:integer); cdecl;
PyFile_SoftSpace:function (ob:PPyObject;i:integer):integer; cdecl;
PyFile_WriteObject:function (ob1,ob2:PPyObject;i:integer):integer; cdecl;
PyFile_WriteString:procedure(s:PAnsiChar;ob:PPyObject); cdecl;
PyFloat_AsDouble:function (ob:PPyObject):DOUBLE; cdecl;
PyFloat_FromDouble:function (db:double):PPyObject; cdecl;
PyFunction_GetCode:function (ob:PPyObject):PPyObject; cdecl;
PyFunction_GetGlobals:function (ob:PPyObject):PPyObject; cdecl;
PyFunction_New:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyImport_AddModule:function (name:PAnsiChar):PPyObject; cdecl;
PyImport_Cleanup:procedure; cdecl;
PyImport_GetMagicNumber:function :LONGINT; cdecl;
PyImport_ImportFrozenModule:function (key:PAnsiChar):integer; cdecl;
PyImport_ImportModule:function (name:PAnsiChar):PPyObject; cdecl;
PyImport_Import:function (name:PPyObject):PPyObject; cdecl;
//PyImport_Init:procedure; cdecl;
PyImport_ReloadModule:function (ob:PPyObject):PPyObject; cdecl;
PyInstance_New:function (obClass, obArg, obKW:PPyObject):PPyObject; cdecl;
PyInt_AsLong:function (ob:PPyObject):LONGINT; cdecl;
PyList_Append:function (ob1,ob2:PPyObject):integer; cdecl;
PyList_AsTuple:function (ob:PPyObject):PPyObject; cdecl;
PyList_GetItem:function (ob:PPyObject;i:NativeInt):PPyObject; cdecl;
PyList_GetSlice:function (ob:PPyObject;i1,i2:NativeInt):PPyObject; cdecl;
PyList_Insert:function (dp:PPyObject;idx:NativeInt;item:PPyObject):integer; cdecl;
PyList_New:function (size:NativeInt):PPyObject; cdecl;
PyList_Reverse:function (ob:PPyObject):integer; cdecl;
PyList_SetItem:function (dp:PPyObject;idx:NativeInt;item:PPyObject):integer; cdecl;
PyList_SetSlice:function (ob:PPyObject;i1,i2:NativeInt;ob2:PPyObject):integer; cdecl;
PyList_Size:function (ob:PPyObject):NativeInt; cdecl;
PyList_Sort:function (ob:PPyObject):integer; cdecl;
PyLong_AsDouble:function (ob:PPyObject):DOUBLE; cdecl;
PyLong_AsLong:function (ob:PPyObject):LONGINT; cdecl;
PyLong_FromDouble:function (db:double):PPyObject; cdecl;
PyLong_FromLong:function (l:longint):PPyObject; cdecl;
PyLong_FromString:function (pc:PAnsiChar;var ppc:PAnsiChar;i:integer):PPyObject; cdecl;
PyLong_FromUnsignedLong:function(val:cardinal) : PPyObject; cdecl;
PyLong_AsUnsignedLong:function(ob:PPyObject) : Cardinal; cdecl;
PyLong_FromUnicode:function(ob:PPyObject; a, b : integer) : PPyObject; cdecl;
PyLong_FromLongLong:function(val:Int64) : PPyObject; cdecl;
PyLong_AsLongLong:function(ob:PPyObject) : Int64; cdecl;
PyMapping_Check:function (ob:PPyObject):integer; cdecl;
PyMapping_GetItemString:function (ob:PPyObject;key:PAnsiChar):PPyObject; cdecl;
PyMapping_HasKey:function (ob,key:PPyObject):integer; cdecl;
PyMapping_HasKeyString:function (ob:PPyObject;key:PAnsiChar):integer; cdecl;
PyMapping_Length:function (ob:PPyObject):NativeInt; cdecl;
PyMapping_SetItemString:function (ob:PPyObject; key:PAnsiChar; value:PPyObject):integer; cdecl;
PyMethod_Class:function (ob:PPyObject):PPyObject; cdecl;
PyMethod_Function:function (ob:PPyObject):PPyObject; cdecl;
PyMethod_New:function (ob1,ob2,ob3:PPyObject):PPyObject; cdecl;
PyMethod_Self:function (ob:PPyObject):PPyObject; cdecl;
PyModule_GetName:function (ob:PPyObject):PAnsiChar; cdecl;
PyModule_New:function (key:PAnsiChar):PPyObject; cdecl;
PyNumber_Absolute:function (ob:PPyObject):PPyObject; cdecl;
PyNumber_Add:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_And:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Check:function (ob:PPyObject):integer; cdecl;
PyNumber_Coerce:function (var ob1,ob2:PPyObject):integer; cdecl;
PyNumber_Divide:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_FloorDivide:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_TrueDivide:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Divmod:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Float:function (ob:PPyObject):PPyObject; cdecl;
PyNumber_Int:function (ob:PPyObject):PPyObject; cdecl;
PyNumber_Invert:function (ob:PPyObject):PPyObject; cdecl;
PyNumber_Long:function (ob:PPyObject):PPyObject; cdecl;
PyNumber_Lshift:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Multiply:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Negative:function (ob:PPyObject):PPyObject; cdecl;
PyNumber_Or:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Positive:function (ob:PPyObject):PPyObject; cdecl;
PyNumber_Power:function (ob1,ob2,ob3:PPyObject):PPyObject; cdecl;
PyNumber_Remainder:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Rshift:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Subtract:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyNumber_Xor:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyOS_InitInterrupts:procedure; cdecl;
PyOS_InterruptOccurred:function :integer; cdecl;
PyObject_CallObject:function (ob,args:PPyObject):PPyObject; cdecl;
PyObject_CallMethod : function ( obj : PPyObject; method, format : PAnsiChar {...}) : PPyObject; cdecl varargs;
PyObject_Compare: function (ob1,ob2:PPyObject):integer; cdecl;
PyObject_RichCompare:function (ob1,ob2:PPyObject;opid:integer):PPyObject; cdecl;
PyObject_RichCompareBool:function (ob1,ob2:PPyObject;opid:integer):Integer; cdecl;
PyObject_GetAttr:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PyObject_GetAttrString:function (ob:PPyObject;c:PAnsiChar):PPyObject; cdecl;
PyObject_GetItem:function (ob,key:PPyObject):PPyObject; cdecl;
PyObject_DelItem:function (ob,key:PPyObject):PPyObject; cdecl;
PyObject_HasAttrString:function (ob:PPyObject;key:PAnsiChar):integer; cdecl;
PyObject_Hash:function (ob:PPyObject):NativeInt; cdecl;
PyObject_IsTrue:function (ob:PPyObject):integer; cdecl;
PyObject_Length:function (ob:PPyObject):NativeInt; cdecl;
PyObject_Repr:function (ob:PPyObject):PPyObject; cdecl;
PyObject_SetAttr:function (ob1,ob2,ob3:PPyObject):integer; cdecl;
PyObject_SetAttrString:function (ob:PPyObject;key:PAnsiChar;value:PPyObject):integer; cdecl;
PyObject_SetItem:function (ob1,ob2,ob3:PPyObject):integer; cdecl;
PyObject_Init:function (ob:PPyObject; t:PPyTypeObject):PPyObject; cdecl;
PyObject_InitVar:function (ob:PPyObject; t:PPyTypeObject; size:NativeInt):PPyObject; cdecl;
PyObject_New:function (t:PPyTypeObject):PPyObject; cdecl;
PyObject_NewVar:function (t:PPyTypeObject; size:NativeInt):PPyObject; cdecl;
PyObject_Free:procedure (ob:PPyObject); cdecl;
PyObject_GetIter: function (obj: PPyObject) : PPyObject; cdecl;
PyIter_Next: function (obj: PPyObject) : PPyObject; cdecl;
PyObject_IsInstance:function (inst, cls:PPyObject):integer; cdecl;
PyObject_IsSubclass:function (derived, cls:PPyObject):integer; cdecl;
PyObject_Call:function (ob, args, kw:PPyObject):PPyObject; cdecl;
PyObject_GenericGetAttr:function (obj, name : PPyObject) : PPyObject; cdecl;
PyObject_GenericSetAttr:function (obj, name, value : PPyObject) : Integer; cdecl;
PyObject_GC_Malloc:function (size:NativeUInt):PPyObject; cdecl;
PyObject_GC_New:function (t:PPyTypeObject):PPyObject; cdecl;
PyObject_GC_NewVar:function (t:PPyTypeObject; size:NativeInt):PPyObject; cdecl;
PyObject_GC_Resize:function (t:PPyObject; newsize:NativeInt):PPyObject; cdecl;
PyObject_GC_Del:procedure (ob:PPyObject); cdecl;
PyObject_GC_Track:procedure (ob:PPyObject); cdecl;
PyObject_GC_UnTrack:procedure (ob:PPyObject); cdecl;
PySequence_Check:function (ob:PPyObject):integer; cdecl;
PySequence_Concat:function (ob1,ob2:PPyObject):PPyObject; cdecl;
PySequence_Count:function (ob1,ob2:PPyObject):integer; cdecl;
PySequence_GetItem:function (ob:PPyObject;i:NativeInt):PPyObject; cdecl;
PySequence_GetSlice:function (ob:PPyObject;i1,i2:NativeInt):PPyObject; cdecl;
PySequence_In:function (ob1,ob2:PPyObject):integer; cdecl;
PySequence_Index:function (ob1,ob2:PPyObject):NativeInt; cdecl;
PySequence_Length:function (ob:PPyObject):NativeInt; cdecl;
PySequence_Repeat:function (ob:PPyObject;count:NativeInt):PPyObject; cdecl;
PySequence_SetItem:function (ob:PPyObject;i:NativeInt;value:PPyObject):integer; cdecl;
PySequence_SetSlice:function (ob:PPyObject;i1,i2:NativeInt;value:PPyObject):integer; cdecl;
PySequence_DelSlice:function (ob:PPyObject;i1,i2:NativeInt):integer; cdecl;
PySequence_Tuple:function (ob:PPyObject):PPyObject; cdecl;
PySequence_Contains:function (ob, value:PPyObject):integer; cdecl;
PySeqIter_New: function(obj : PPyObject) : PPyObject; cdecl;
PySlice_GetIndices:function (ob:PPySliceObject;length:NativeInt;var start,stop,step:NativeInt):integer; cdecl;
PySlice_GetIndicesEx:function (ob:PPySliceObject;length:NativeInt;var start,stop,step,slicelength:NativeInt):integer; cdecl;
PySlice_New:function (start,stop,step:PPyObject):PPyObject; cdecl;
PyBytes_Concat:procedure(var ob1:PPyObject;ob2:PPyObject); cdecl;
PyBytes_ConcatAndDel:procedure(var ob1:PPyObject;ob2:PPyObject); cdecl;
PyBytes_FromStringAndSize:function (s:PAnsiChar;i:NativeInt):PPyObject; cdecl;
PyBytes_Size:function (ob:PPyObject):NativeInt; cdecl;
PyBytes_DecodeEscape:function(s:PAnsiChar; len:NativeInt; errors:PAnsiChar; unicode:NativeInt; recode_encoding:PAnsiChar):PPyObject; cdecl;
PyBytes_Repr:function(ob:PPyObject; smartquotes:integer):PPyObject; cdecl;
PySys_GetObject:function (s:PAnsiChar):PPyObject; cdecl;
//PySys_Init:procedure; cdecl;
PySys_SetObject:function (s:PAnsiChar;ob:PPyObject):integer; cdecl;
PySys_SetPath:procedure(path:PAnsiChar); cdecl;
//PyTraceBack_Fetch:function :PPyObject; cdecl;
PyTraceBack_Here:function (p:pointer):integer; cdecl;
PyTraceBack_Print:function (ob1,ob2:PPyObject):integer; cdecl;
//PyTraceBack_Store:function (ob:PPyObject):integer; cdecl;
PyTuple_GetItem:function (ob:PPyObject;i:NativeInt):PPyObject; cdecl;
PyTuple_GetSlice:function (ob:PPyObject;i1,i2:NativeInt):PPyObject; cdecl;
PyTuple_New:function (size:NativeInt):PPyObject; cdecl;
PyTuple_SetItem:function (ob:PPyObject;key:NativeInt;value:PPyObject):integer; cdecl;
PyTuple_Size:function (ob:PPyObject):NativeInt; cdecl;
PyType_IsSubtype:function (a, b : PPyTypeObject):integer; cdecl;
PyType_GenericAlloc:function(atype: PPyTypeObject; nitems:NativeInt) : PPyObject; cdecl;
PyType_GenericNew:function(atype: PPyTypeObject; args, kwds : PPyObject) : PPyObject; cdecl;
PyType_Ready:function(atype: PPyTypeObject) : integer; cdecl;
PyUnicode_FromWideChar:function (const w:PWideChar; size:NativeInt):PPyObject; cdecl;
PyUnicode_AsWideChar:function (unicode: PPyObject; w:PWideChar; size:NativeInt):integer; cdecl;
PyUnicode_Decode:function (const s:PAnsiChar; size: NativeInt; const encoding : PAnsiChar; const errors: PAnsiChar):PPyObject; cdecl;
PyUnicode_AsEncodedString:function (unicode:PPyObject; const encoding:PAnsiChar; const errors:PAnsiChar):PPyObject; cdecl;
PyUnicode_FromOrdinal:function (ordinal:integer):PPyObject; cdecl;
PyUnicode_GetSize:function (unicode:PPyObject):NativeInt; cdecl;
PyWeakref_GetObject: function ( ref : PPyObject) : PPyObject; cdecl;
PyWeakref_NewProxy: function ( ob, callback : PPyObject) : PPyObject; cdecl;
PyWeakref_NewRef: function ( ob, callback : PPyObject) : PPyObject; cdecl;
PyWrapper_New: function ( ob1, ob2 : PPyObject) : PPyObject; cdecl;
PyBool_FromLong: function ( ok : Integer) : PPyObject; cdecl;
PyThreadState_SetAsyncExc: function(t_id :LongInt; exc :PPyObject) : Integer; cdecl;
Py_AtExit:function (proc: AtExitProc):integer; cdecl;
//Py_Cleanup:procedure; cdecl;
Py_CompileStringFlags:function (s1,s2:PAnsiChar;i:integer;flags:PPyCompilerFlags):PPyObject; cdecl;
Py_CompileStringExFlags:function (s1,s2:PAnsiChar;i:integer;flags:PPyCompilerFlags;optimize:integer):PPyObject; cdecl;
Py_FatalError:procedure(s:PAnsiChar); cdecl;
Py_FindMethod:function (md:PPyMethodDef;ob:PPyObject;key:PAnsiChar):PPyObject; cdecl;
Py_FindMethodInChain:function (mc:PPyMethodChain;ob:PPyObject;key:PAnsiChar):PPyObject; cdecl;
_PyObject_New:function (obt:PPyTypeObject;ob:PPyObject):PPyObject; cdecl;
_PyString_Resize:function (var ob:PPyObject;i:NativeInt):integer; cdecl;
Py_Finalize                     : procedure; cdecl;
PyErr_ExceptionMatches          : function ( exc : PPyObject) : Integer; cdecl;
PyErr_GivenExceptionMatches     : function ( raised_exc, exc : PPyObject) : Integer; cdecl;
PyEval_EvalCode                 : function ( co : PPyCodeObject; globals, locals : PPyObject) : PPyObject; cdecl;
Py_GetVersion                   : function : PAnsiChar; cdecl;
Py_GetCopyright                 : function : PAnsiChar; cdecl;
Py_GetExecPrefix                : function : PAnsiChar; cdecl;
Py_GetPath                      : function : PAnsiChar; cdecl;
Py_SetPythonHome                : procedure (home : PWideChar); cdecl;
Py_GetPythonHome                : function : PWideChar; cdecl;
Py_DecodeLocale                 : function (arg: PAnsiChar; size: pinteger): PWideChar;
Py_GetPrefix                    : function : PAnsiChar; cdecl;
Py_GetProgramName               : function : PAnsiChar; cdecl;

PyParser_SimpleParseStringFlags : function ( str : PAnsiChar; start, flags : Integer) : PNode; cdecl;
PyNode_Free                     : procedure( n : PNode ); cdecl;
PyErr_NewException              : function ( name : PAnsiChar; base, dict : PPyObject ) : PPyObject; cdecl;
Py_Malloc                       : function ( size : NativeInt ) : Pointer;
PyMem_Malloc                    : function ( size : NativeInt ) : Pointer;

{New exported Objects in Python 1.5}
Py_SetProgramName               : procedure( name: PAnsiChar); cdecl;
Py_SetProgramName3000           : procedure( name: PWideChar); cdecl;
Py_IsInitialized                : function : integer; cdecl;
Py_GetProgramFullPath           : function : PAnsiChar; cdecl;
Py_NewInterpreter               : function : PPyThreadState; cdecl;
Py_EndInterpreter               : procedure( tstate: PPyThreadState); cdecl;
PyEval_AcquireLock              : procedure; cdecl;
PyEval_ReleaseLock              : procedure; cdecl;
PyEval_AcquireThread            : procedure( tstate: PPyThreadState); cdecl;
PyEval_ReleaseThread            : procedure( tstate: PPyThreadState); cdecl;
PyInterpreterState_New          : function : PPyInterpreterState; cdecl;
PyInterpreterState_Clear        : procedure( interp: PPyInterpreterState); cdecl;
PyInterpreterState_Delete       : procedure( interp: PPyInterpreterState); cdecl;
PyThreadState_New               : function ( interp: PPyInterpreterState): PPyThreadState; cdecl;
PyThreadState_Clear             : procedure( tstate: PPyThreadState); cdecl;
PyThreadState_Delete            : procedure( tstate: PPyThreadState); cdecl;
PyThreadState_Get               : function : PPyThreadState; cdecl;
PyThreadState_Swap              : function ( tstate: PPyThreadState): PPyThreadState; cdecl;
PyErr_SetInterrupt              : procedure; cdecl;
PyGILState_Ensure               : function() : PyGILstate_STATE; cdecl;
PyGILState_Release              : procedure(gilstate : PyGILState_STATE); cdecl;
